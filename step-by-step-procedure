Step1: On CA server
# ssh-keygen -t ed25519 -f /etc/ssh/ca_user_key -C "zohoca"
use passphrase to protect CA key.
    ==> ca_user_key is your User CA private key
    ==> ca_user_key.pub is your User CA public key

Step2: On Target Server(s)
2.1 Create directory to hold trusted CA keys
# mkdir -p /usr/local/zoho/sshtrustedca

2.2 Copy "ca_user_key.pub" from CA server to target
# scp /etc/ssh/ca_user_key.pub root@target-server:/usr/local/zoho/sshtrustedca/zohoca.pub

2.3 Tell sshd to trust this CA key
Edit /etc/ssh/sshd_config:
   TrustedUserCAKeys /usr/local/zoho/sshtrustedca/zohoca.pub
Then restart sshd:
# systemctl restart sshd

Step 3: On Client Machine
3.1 Generate user key (ED25519)
# ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519

3.2 Copy public key to CA server
# scp ~/.ssh/id_ed25519.pub root@CA:/tmp/id_ed25519.pub

Step 4: On CA Server (Sign the User Key)
# ssh-keygen -s /etc/ssh/ca_user_key -I testuser_cert -n patcher,root -V +52w /tmp/id_ed25519.pub
Options: 
ssh-keygen	=  The OpenSSH utility used for generating keys and managing certificates.
-s /etc/ssh/ca_user_key	=  This tells ssh-keygen to sign a key using the private CA key located at /etc/ssh/ca_user_key
-I testuser_cert	=  This sets the certificate identity (or key ID) to testuser_cert. It is a label to help identify the certificate
-n patcher,root  =	This sets the principal name (i.e., the username that can authenticate using this certificate). This must match the remote username you are trying to login as.
-V +52w	 =  	This defines the validity period of the certificate: +52w = valid from now for 52 weeks (1 year).
/tmp/id_ed25519.pub	=  This is the user's public key that you want to sign with the CA key.

4.2 Copy the signed key to client machine where the private is located
# scp -rp /tmp/id_ed25519-cert.pub root@client:/root/.ssh/

Step 5: From client try to authenticate with cert for server.
# ssh -o CertificateFile=id_ed25519-cert.pub -i id_ed25519 root@server
